{ config, pkgs, ... }:
{
  imports = [
    ./hardware-configuration.nix
    <home-manager/nixos>
  ];

  # Use the GRUB 2 boot loader.
  boot.loader.grub.enable = true;
  boot.loader.grub.version = 2;
  boot.loader.grub.device = "/dev/vda";

  # Install minimal packages needed for provisioning
  environment.systemPackages = with pkgs; [
    git
    xorg.xev
  ];

  services = {
    qemuGuest.enable = true;
    spice-vdagentd.enable = true; 

    openssh = {
      enable = true;
      passwordAuthentication = false;
      permitRootLogin = "no";
    };
    xserver = {
      enable = true;
      desktopManager = {
        xterm.enable = false;
        xfce.enable = true;
      };
      displayManager.defaultSession = "xfce";
    };
  };
  

  networking.firewall.enable = true;

  # Set docker 
  virtualisation.docker = {
    enable = true;
    # Allow docker to use btrfs
    storageDriver = "btrfs";
    rootless = {
      enable = true;
      setSocketVariable = true;
    };
  };

   # Turn off mutable users so `nixos-install` does not prompt to set a password
  users.mutableUsers = false;

  # Create my personal user
  # The password should be changed later
  users.users.${user} = {
    isNormalUser = true;
    initialPassword = "password";
    extraGroups = [
      "wheel"
      "docker"
    ];
    openssh.authorizedKeys.keys = [
      "${public_key}"
    ];
    uid = 1000;
  };

  # Configure basic home-manager  
  home-manager = {
    useUserPackages = true;
    useGlobalPkgs = true;
  };

  fonts.fonts = with pkgs; [
    (nerdfonts.override {
      fonts = ["FiraCode"];
    })
  ];

  # Pin the specific state version of NixOS
  system.stateVersion = "${nix_version}";
}
